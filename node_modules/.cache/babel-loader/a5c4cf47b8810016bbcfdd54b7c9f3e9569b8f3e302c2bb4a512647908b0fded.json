{"ast":null,"code":"var _jsxFileName = \"/home/doci/Scrivania/github-linux/React-Learning-Project/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memeData from \"./memeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [imgs, setImgs] = React.useState(\"\");\n  function generate() {\n    const memesArray = memeData.data.memes;\n    const random = Math.floor(Math.random() * memesArray.length);\n    setImgs(memesArray[random].url);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button\",\n        onClick: generate,\n        children: \"Generate-meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgs,\n      className: \"img-meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n_s(Form, \"XwfmYHr5oIQFTdHyPTST/qzcF2A=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","memeData","jsxDEV","_jsxDEV","Form","_s","imgs","setImgs","useState","generate","memesArray","data","memes","random","Math","floor","length","url","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["/home/doci/Scrivania/github-linux/React-Learning-Project/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\nimport memeData from \"./memeData\";\n\nconst Form = () => {\n   const [imgs, setImgs] = React.useState(\"\");\n   function generate() {\n      const memesArray = memeData.data.memes;\n      const random = Math.floor(Math.random() * memesArray.length);\n      setImgs(memesArray[random].url);\n   }\n\n   return (\n      <main>\n         <div className=\"div-form\">\n            <input type=\"text\" placeholder=\"Top text\" className=\"form-input\" />\n            <input\n               type=\"text\"\n               placeholder=\"Bottom text\"\n               className=\"form-input\"\n            />\n            <button className=\"form-button\" onClick={generate}>\n               Generate-meme\n            </button>\n         </div>\n         <img src={imgs} className=\"img-meme\" />\n      </main>\n   );\n};\nexport default Form;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAC1C,SAASC,QAAQA,CAAA,EAAG;IACjB,MAAMC,UAAU,GAAGT,QAAQ,CAACU,IAAI,CAACC,KAAK;IACtC,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,EAAE,GAAGH,UAAU,CAACM,MAAM,CAAC;IAC5DT,OAAO,CAACG,UAAU,CAACG,MAAM,CAAC,CAACI,GAAG,CAAC;EAClC;EAEA,oBACGd,OAAA;IAAAe,QAAA,gBACGf,OAAA;MAAKgB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACtBf,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACF,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnEtB,OAAA;QACGiB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBF,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB,eACFtB,OAAA;QAAQgB,SAAS,EAAC,aAAa;QAACO,OAAO,EAAEjB,QAAS;QAAAS,QAAA,EAAC;MAEnD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN,eACNtB,OAAA;MAAKwB,GAAG,EAAErB,IAAK;MAACa,SAAS,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnC;AAEb,CAAC;AAACpB,EAAA,CAxBID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAyBV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}