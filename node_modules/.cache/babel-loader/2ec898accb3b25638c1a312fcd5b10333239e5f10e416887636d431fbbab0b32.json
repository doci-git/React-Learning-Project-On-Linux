{"ast":null,"code":"var _jsxFileName = \"/home/doci/Scrivania/github-linux/React-Learning-Project/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport memeData from \"./memeData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [imgs, setImgs] = React.useState(\"\");\n  function generate() {\n    const memesArray = memeData.data.memes;\n    const random = Math.floor(Math.random() * memesArray.length);\n    setImgs(memesArray[random].url);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button\",\n        onClick: generate,\n        children: \"Generate meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgs,\n      className: \"img-meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n_s(Form, \"XwfmYHr5oIQFTdHyPTST/qzcF2A=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","memeData","Form","imgs","setImgs","useState","generate","memesArray","data","memes","random","Math","floor","length","url"],"sources":["/home/doci/Scrivania/github-linux/React-Learning-Project/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\nimport memeData from \"./memeData\";\n\nconst Form = () => {\n   const [imgs, setImgs] = React.useState(\"\");\n   function generate() {\n      const memesArray = memeData.data.memes;\n      const random = Math.floor(Math.random() * memesArray.length);\n      setImgs(memesArray[random].url);\n   }\n\n   return (\n      <main>\n         <div className=\"div-form\">\n            <input type=\"text\" placeholder=\"Top text\" className=\"form-input\" />\n            <input\n               type=\"text\"\n               placeholder=\"Bottom text\"\n               className=\"form-input\"\n            />\n            <button className=\"form-button\" onClick={generate}>\n               Generate meme\n            </button>\n         </div>\n         <img src={imgs} className=\"img-meme\" />\n      </main>\n   );\n};\nexport default Form;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,IAAI,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,KAAK,CAACK,QAAQ,CAAC,EAAE,CAAC;EAC1C,SAASC,QAAQ,GAAG;IACjB,MAAMC,UAAU,GAAGN,QAAQ,CAACO,IAAI,CAACC,KAAK;IACtC,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,EAAE,GAAGH,UAAU,CAACM,MAAM,CAAC;IAC5DT,OAAO,CAACG,UAAU,CAACG,MAAM,CAAC,CAACI,GAAG,CAAC;EAClC;EAEA,oBACG;IAAA,wBACG;MAAK,SAAS,EAAC,UAAU;MAAA,wBACtB;QAAO,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,UAAU;QAAC,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAG,eACnE;QACG,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,aAAa;QACzB,SAAS,EAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QACvB,eACF;QAAQ,SAAS,EAAC,aAAa;QAAC,OAAO,EAAER,QAAS;QAAA,UAAC;MAEnD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACN,eACN;MAAK,GAAG,EAAEH,IAAK;MAAC,SAAS,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACnC;AAEb,CAAC;AAAC,GAxBID,IAAI;AAAA,KAAJA,IAAI;AAyBV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}